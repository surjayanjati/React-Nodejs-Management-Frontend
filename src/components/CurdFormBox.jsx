
// Importing The HOOKS ---------------------------------------------------------->
import { useState } from "react";
import { useDispatch } from "react-redux";
import { useNavigate } from "react-router-dom";
import { useSelector } from "react-redux";
// Importing The Action Buttons ------------------------------------------------->
import { createUser,emptyStore } from "../actions/managementActions";
// Importing The Usecookies ----------------------------------------------------->
import { useCookies } from "react-cookie";






// Function For CurdFormBox -------------------------------------------------------------------------------------------------->
function CurdFormBox(){
      // UseState For Storing The Form Data----------------/
  const [intialValue, setValue] = useState({
    userName: "",
    emailAddress: "",
    password: "",
    role: "",
  });
  
  
  // Using The UseCookie-------------------------------------------------------------------->
  const [cookie, setCookie, removeCookie] = useCookies(["loginCookie"]);
  // Using The UseNavigate-------------------------------------------------------------------->
  const navigate = useNavigate();
  // Using The useDispatch-------------------------------------------------------------------->
  const dispatch = useDispatch();
 // Function For InputEvent --------------------------------------------------------------->
 function inputEvent(event) {
    const { name, value } = event.target;
    setValue((preValue) => {
      return {
        ...preValue,
        [name]: value,
      };
    });
  }
  // Function For Form Submit --------------------------------------------------------------->
  async function formEvent(e) {
    e.preventDefault();
    // Creating The CurrentId With Auto Generated Number--------/
    const autoGeneratedNumber = Math.round(
      Date.now().toString() * (Math.random() * 10)
    );
    const currentId = autoGeneratedNumber.toString();

    // Storing The Values which will be Sent-------------------/
    const data = JSON.stringify({
      userName: intialValue.userName,
      emailAddress: intialValue.emailAddress,
      password: intialValue.password,
      role: intialValue.role,
      currentId: currentId,
    });

    const response = await fetch("/managementapp/api/v1/admin/createdatas", {
      method: "POST",
      headers: {
        "Content-type": "Application/json",
        "access-token": cookie.loginCookie,
      },
      body: data,
    });
    const responseData = await response.json();
    if (responseData.status === 201) {
      dispatch(createUser(JSON.parse(data)));
      alert(responseData.msg);
    } else if (responseData.status === 401) {
      removeCookie("loginCookie");
      navigate("/login");
      dispatch(emptyStore())
    } else if (responseData.success === false) {
      alert(responseData.msg);
    }
  }

    return(
        <> 
          <div id="box2i">
        <div className="form-element-boxi">
          <div className="inputbox">
            <div className="input-box1">
              <i className="fa-solid fa-user"></i>
            </div>
            <hr />
            <div className="input-box2">
              <input
                type="text"
                placeholder="Enter Name"
                name="userName"
                onChange={inputEvent}
              />
            </div>
          </div>
          <div className="inputbox">
            <div className="input-box1">
              <i className="fa-solid fa-envelope"></i>
            </div>
            <hr />
            <div className="input-box2">
              <input
                type="text"
                placeholder="Enter Email"
                name="emailAddress"
                onChange={inputEvent}
              />
            </div>
          </div>
          <div className="inputbox">
            <div className="input-box1">
              <i className="fa-solid fa-lock"></i>
            </div>
            <hr />
            <div className="input-box2">
              <input
                type="text"
                placeholder="Enter Password"
                name="password"
                onChange={inputEvent}
              />
            </div>
          </div>
          <div className="inputbox">
            <div className="input-box1">
              <i className="fa-solid fa-person"></i>
            </div>
            <hr />
            <div className="input-box2">
              <input
                type="text"
                placeholder="Enter manager/employee"
                name="role"
                onChange={inputEvent}
              />
            </div>
          </div>
        </div>

        <div id="button-divi">
          <button onClick={formEvent}>Create New User</button>
        </div>
      </div>
        </>
    )
};

export default CurdFormBox;